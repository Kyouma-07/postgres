CREATE TABLE contacts (
	name VARCHAR(100) NOT NULL,
    phone VARCHAR(15) NOT NULL UNIQUE
);
 
INSERT INTO contacts (name, phone)
VALUES ('billybob', '8781213455');
 
-- This insert would result in an error:
INSERT INTO contacts (name, phone)
VALUES ('billybob', '8781213455');

CREATE TABLE users (
	username VARCHAR(20) NOT NULL,
    age INT CHECK (age > 0)
);
 
CREATE TABLE palindromes (
  word VARCHAR(100) CHECK(REVERSE(word) = word)
);

CREATE TABLE companies (
    name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL,
    CONSTRAINT name_address UNIQUE (name , address)
);
 
CREATE TABLE houses (
  purchase_price INT NOT NULL,
  sale_price INT NOT NULL,
  CONSTRAINT sprice_gt_pprice CHECK(sale_price >= purchase_price)
);


--adding a column using alter table .
ALTER TABLE companies 
ADD COLUMN phone VARCHAR(15);


 --adding another column.
ALTER TABLE companies
ADD COLUMN employee_count INT NOT NULL DEFAULT 1;


--dropping a column from a table.
ALTER TABLE companies DROP COLUMN phone;

--renaming a table in SQL.
ALTER TABLE houses RENAME TO companies1;
ALTER TABLE companies1 RENAME TO houses;

--renaming a column name in SQL table
ALTER TABLE companies
RENAME COLUMN name TO company_name;

select *
from companies;


ALTER TABLE companies
RENAME COLUMN company_name TO name;


--modifying tables properties.
ALTER TABLE companies
ALTER COLUMN name TYPE VARCHAR(100), --changes the datatype of the column
ALTER COLUMN name SET DEFAULT 'unknown'; --changes the default value


--adding and dropping constraints in sql Table
ALTER TABLE houses 
ADD CONSTRAINT positive_pprice CHECK (purchase_price >= 0);
ALTER TABLE houses DROP CONSTRAINT positive_pprice;


select *
from houses;



--using subquery:
select *
FROM orders
WHERE customer_id = (select id 
					 FROM customers
					 WHERE last_name = 'George');

--cross join
select *
from customers , orders;

--INNER JOIN
select *
FROM customers c
JOIN orders o
ON c.id = o.customer_id;


--INNER JOIN 
select c.first_name , c.last_name , o.order_date , o.amount
FROm customers c
JOIN orders o 
ON  o.customer_id = c.id ;


--INNER JOIN WITH GROUP BY
SELECT first_name, last_name, SUM(amount) as Total
FROm customers c
JOIN orders o 
ON  o.customer_id = c.id
GROUP BY first_name , last_name
ORDER BY total;


--LEFT JOIN 
SELECT *
FROm customers c
LEFT JOIN orders o 
ON  o.customer_id = c.id;

--LEFT JOIN WITH GROUP BY
SELECT first_name, last_name, SUM(amount) as Total
FROm customers c
LEFT JOIN orders o 
ON  o.customer_id = c.id
GROUP BY first_name , last_name
ORDER BY total;

INSERT INTO orders (amount ,order_date) VALUES (100, NOW());

select *
from orders;

--RIGHT JOIN
SELECT first_name, last_name
FROm customers c
RIGHT JOIN orders o 
ON  o.customer_id = c.id;


--ON DELETE CASCADE
--what happens when we delete a customer from the table.
delete from customers
WHERE last_name = 'George';

DROP table orders;
DROP table customers;

CREATE TABLE customers (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(50)
);
 
CREATE TABLE orders (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_date DATE,
    amount DECIMAL(8 , 2 ),
    customer_id INT,
    FOREIGN KEY (customer_id)
        REFERENCES customers (id)
        ON DELETE CASCADE
);

select *
from customers;

INSERT INTO customers (first_name, last_name, email) 
VALUES ('Boy', 'George', 'george@gmail.com'),
       ('George', 'Michael', 'gm@gmail.com'),
       ('David', 'Bowie', 'david@gmail.com'),
       ('Blue', 'Steele', 'blue@gmail.com'),
       ('Bette', 'Davis', 'bette@aol.com');
       
       
INSERT INTO orders (order_date, amount, customer_id)
VALUES ('2016-02-10', 99.99, 1),
       ('2017-11-11', 35.50, 1),
       ('2014-12-12', 800.67, 2),
       ('2015-01-03', 12.50, 2),
       ('1999-04-11', 450.25, 5);

delete from customers 
where last_name = 'George';

CREATE TABLE Students(
	id INT PRIMARY KEY,
	first_name varchar(100)
	);

CREATE TABLE Papers(
	student_id INT,
	title varchar(100),
	grade int CHECK(grade < 100)
);

INSERT INTO STUDENTS (id,first_name) VALUES(1,'Caleb'),
										 (2,'Samantha'),
										 (3,'Raj'),
										 (4,'Carlos'),
										 (5,'Lisa');

INSERT INTO papers (student_id , title , grade)
VALUES ( 1, 'My First Report', 60),
		(1,'My second Book Report', 75),
		(2, 'Russian Lit Through The Ages',94),
		(2,'De Montaigne and The Art of the essay',98),
		(4, 'Borges and Magical Realism',89);













